// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class JoinEvent extends ethereum.Event {
  get params(): JoinEvent__Params {
    return new JoinEvent__Params(this);
  }
}

export class JoinEvent__Params {
  _event: JoinEvent;

  constructor(event: JoinEvent) {
    this._event = event;
  }

  get _userName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _add(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get _name(): string {
    return this._event.parameters[2].value.toString();
  }

  get _picHash(): string {
    return this._event.parameters[3].value.toString();
  }

  get _descriptionContactHash(): string {
    return this._event.parameters[4].value.toString();
  }

  get _role(): string {
    return this._event.parameters[5].value.toString();
  }

  get _contentHash(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class UpdateAccount extends ethereum.Event {
  get params(): UpdateAccount__Params {
    return new UpdateAccount__Params(this);
  }
}

export class UpdateAccount__Params {
  _event: UpdateAccount;

  constructor(event: UpdateAccount) {
    this._event = event;
  }

  get _userName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _name(): string {
    return this._event.parameters[1].value.toString();
  }

  get _picHash(): string {
    return this._event.parameters[2].value.toString();
  }

  get _descriptionContactHash(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class UpdateContentHash extends ethereum.Event {
  get params(): UpdateContentHash__Params {
    return new UpdateContentHash__Params(this);
  }
}

export class UpdateContentHash__Params {
  _event: UpdateContentHash;

  constructor(event: UpdateContentHash) {
    this._event = event;
  }

  get _userName(): string {
    return this._event.parameters[0].value.toString();
  }

  get _contentHash(): string {
    return this._event.parameters[1].value.toString();
  }
}

export class Contract1__accountListResult {
  value0: string;
  value1: string;
  value2: string;
  value3: string;
  value4: string;
  value5: string;
  value6: Address;

  constructor(
    value0: string,
    value1: string,
    value2: string,
    value3: string,
    value4: string,
    value5: string,
    value6: Address
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromString(this.value0));
    map.set("value1", ethereum.Value.fromString(this.value1));
    map.set("value2", ethereum.Value.fromString(this.value2));
    map.set("value3", ethereum.Value.fromString(this.value3));
    map.set("value4", ethereum.Value.fromString(this.value4));
    map.set("value5", ethereum.Value.fromString(this.value5));
    map.set("value6", ethereum.Value.fromAddress(this.value6));
    return map;
  }
}

export class Contract1 extends ethereum.SmartContract {
  static bind(address: Address): Contract1 {
    return new Contract1("Contract1", address);
  }

  SysAdminProxyAddress(): Address {
    let result = super.call(
      "SysAdminProxyAddress",
      "SysAdminProxyAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_SysAdminProxyAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "SysAdminProxyAddress",
      "SysAdminProxyAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  accountList(param0: string): Contract1__accountListResult {
    let result = super.call(
      "accountList",
      "accountList(string):(string,string,string,string,string,string,address)",
      [ethereum.Value.fromString(param0)]
    );

    return new Contract1__accountListResult(
      result[0].toString(),
      result[1].toString(),
      result[2].toString(),
      result[3].toString(),
      result[4].toString(),
      result[5].toString(),
      result[6].toAddress()
    );
  }

  try_accountList(
    param0: string
  ): ethereum.CallResult<Contract1__accountListResult> {
    let result = super.tryCall(
      "accountList",
      "accountList(string):(string,string,string,string,string,string,address)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new Contract1__accountListResult(
        value[0].toString(),
        value[1].toString(),
        value[2].toString(),
        value[3].toString(),
        value[4].toString(),
        value[5].toString(),
        value[6].toAddress()
      )
    );
  }

  importAccount(_add: Address): Array<string> {
    let result = super.call(
      "importAccount",
      "importAccount(address):(string[])",
      [ethereum.Value.fromAddress(_add)]
    );

    return result[0].toStringArray();
  }

  try_importAccount(_add: Address): ethereum.CallResult<Array<string>> {
    let result = super.tryCall(
      "importAccount",
      "importAccount(address):(string[])",
      [ethereum.Value.fromAddress(_add)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toStringArray());
  }

  join(
    _msgSender: Address,
    _userName: string,
    _name: string,
    _picHash: string,
    _narrationHash: string,
    _contentHash: string,
    _role: string
  ): boolean {
    let result = super.call(
      "join",
      "join(address,string,string,string,string,string,string):(bool)",
      [
        ethereum.Value.fromAddress(_msgSender),
        ethereum.Value.fromString(_userName),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_picHash),
        ethereum.Value.fromString(_narrationHash),
        ethereum.Value.fromString(_contentHash),
        ethereum.Value.fromString(_role)
      ]
    );

    return result[0].toBoolean();
  }

  try_join(
    _msgSender: Address,
    _userName: string,
    _name: string,
    _picHash: string,
    _narrationHash: string,
    _contentHash: string,
    _role: string
  ): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "join",
      "join(address,string,string,string,string,string,string):(bool)",
      [
        ethereum.Value.fromAddress(_msgSender),
        ethereum.Value.fromString(_userName),
        ethereum.Value.fromString(_name),
        ethereum.Value.fromString(_picHash),
        ethereum.Value.fromString(_narrationHash),
        ethereum.Value.fromString(_contentHash),
        ethereum.Value.fromString(_role)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _add(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class EditContentHashCall extends ethereum.Call {
  get inputs(): EditContentHashCall__Inputs {
    return new EditContentHashCall__Inputs(this);
  }

  get outputs(): EditContentHashCall__Outputs {
    return new EditContentHashCall__Outputs(this);
  }
}

export class EditContentHashCall__Inputs {
  _call: EditContentHashCall;

  constructor(call: EditContentHashCall) {
    this._call = call;
  }

  get _userName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _contentHash(): string {
    return this._call.inputValues[1].value.toString();
  }
}

export class EditContentHashCall__Outputs {
  _call: EditContentHashCall;

  constructor(call: EditContentHashCall) {
    this._call = call;
  }
}

export class JoinCall extends ethereum.Call {
  get inputs(): JoinCall__Inputs {
    return new JoinCall__Inputs(this);
  }

  get outputs(): JoinCall__Outputs {
    return new JoinCall__Outputs(this);
  }
}

export class JoinCall__Inputs {
  _call: JoinCall;

  constructor(call: JoinCall) {
    this._call = call;
  }

  get _msgSender(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _userName(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _name(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _picHash(): string {
    return this._call.inputValues[3].value.toString();
  }

  get _narrationHash(): string {
    return this._call.inputValues[4].value.toString();
  }

  get _contentHash(): string {
    return this._call.inputValues[5].value.toString();
  }

  get _role(): string {
    return this._call.inputValues[6].value.toString();
  }
}

export class JoinCall__Outputs {
  _call: JoinCall;

  constructor(call: JoinCall) {
    this._call = call;
  }

  get value0(): boolean {
    return this._call.outputValues[0].value.toBoolean();
  }
}

export class UpdateAccountCall extends ethereum.Call {
  get inputs(): UpdateAccountCall__Inputs {
    return new UpdateAccountCall__Inputs(this);
  }

  get outputs(): UpdateAccountCall__Outputs {
    return new UpdateAccountCall__Outputs(this);
  }
}

export class UpdateAccountCall__Inputs {
  _call: UpdateAccountCall;

  constructor(call: UpdateAccountCall) {
    this._call = call;
  }

  get _userName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _name(): string {
    return this._call.inputValues[1].value.toString();
  }

  get _picHash(): string {
    return this._call.inputValues[2].value.toString();
  }

  get _narrationHash(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class UpdateAccountCall__Outputs {
  _call: UpdateAccountCall;

  constructor(call: UpdateAccountCall) {
    this._call = call;
  }
}

export class UpgradeFromThisCall extends ethereum.Call {
  get inputs(): UpgradeFromThisCall__Inputs {
    return new UpgradeFromThisCall__Inputs(this);
  }

  get outputs(): UpgradeFromThisCall__Outputs {
    return new UpgradeFromThisCall__Outputs(this);
  }
}

export class UpgradeFromThisCall__Inputs {
  _call: UpgradeFromThisCall;

  constructor(call: UpgradeFromThisCall) {
    this._call = call;
  }

  get _userName(): string {
    return this._call.inputValues[0].value.toString();
  }

  get _upgradeTocontractAddress(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class UpgradeFromThisCall__Outputs {
  _call: UpgradeFromThisCall;

  constructor(call: UpgradeFromThisCall) {
    this._call = call;
  }
}
